{"version":3,"sources":["fBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","useEffect","onSubmit","event","preventDefault","updateProfile","className","type","placeholder","onChange","value","target","autoFocusclassName","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","attachmentUrl","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","toggleEditing","update","autoFocus","src","alt","class","faTrash","faPencilAlt","NweetFactory","setText","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","onSnapshot","snapshot","nweetArray","docs","map","nweet","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","Auth","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c894a11.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  //   console.log(userObj.displayName);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    refreshUser();\r\n  };\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .get();\r\n    // console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n      //   console.log(userObj.updateProfile);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"닉네임\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          autoFocusclassName=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n        // 회원가입\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n        // 로그인\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"회원가입\" : \"로그인\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"로그인\" : \"회원가입\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fBase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport default () => {\r\n  const onSocialClick = async (event) => {\r\n    // console.log(event.target.name);\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n    // console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner, attachmentUrl }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    // console.log(ok);\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(nweetObj, newNweet);\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type={\"text\"}\r\n              placeholder=\"트윗 수정\"\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            취소\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"attachment\" />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (text === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: text,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setText(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setText(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    // console.log(event.target.files);\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      //   console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  //   console.log(nweets);\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={text}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 첨부</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"attachment\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\n\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // getNweets();\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  //   const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  //   console.log(isLoggedIn);\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\n\nfunction App() {\n  // console.log(authService.currentUser);\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // async function initUser() {\n    authService.onAuthStateChanged(async (user) => {\n      // console.log(user);\n      if (user) {\n        // setIsLoggedIn(true);\n        await setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n    // }\n    // initUser();\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}